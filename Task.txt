* Create database for shop.

create database shop;
use shop;

* Create 4 tables within the database.

create table Category (CategoryID int, CategoryName char(20));
create table Subcategory (SubCategoryID int, CategoryID int, SubCategoryName char(20));
create table Product (SubCategoryID int, ProductID int, ProductName char(20));
create table Sales (SalesID int, ProductID int, Quantity int, UnitPrice float, DateOfSale date);

* Populate the tables with dummy data.
Category:
+------------+--------------+
| CategoryID | CategoryName |
+------------+--------------+
|          1 | Food         |
|          2 | Sport        |
|          3 | Games        |
+------------+--------------+

Subcategory:
+---------------+------------+-----------------+
| SubCategoryID | CategoryID | SubcategoryName |
+---------------+------------+-----------------+
|            10 |          1 | Fast Food       |
|            20 |          1 | Fizzy Drinks    |
|            30 |          2 | Football        |
|            40 |          2 | Cricket         |
+---------------+------------+-----------------+

Product:
+---------------+-----------+-------------+
| SubCategoryID | ProductID | ProductName |
+---------------+-----------+-------------+
|            20 |         1 | 7up         |
|            20 |         2 | Coke        |
|            20 |         3 | Pepsi       |
|            10 |         4 | Burger      |
+---------------+-----------+-------------+

Sales:
+---------+-----------+----------+-----------+------------+
| SalesID | ProductID | Quantity | UnitPrice | DateOfSale |
+---------+-----------+----------+-----------+------------+
|       1 |         1 |       10 |        30 | 2020-08-15 |
|       2 |         1 |        5 |        15 | 2020-08-20 |
|       3 |         2 |        1 |         5 | 2020-09-01 |
|       4 |         3 |        2 |         3 | 2020-09-11 |
|       5 |         2 |        1 |         5 | 2020-08-15 |
|       6 |         2 |        1 |         5 | 2020-08-15 |
|       7 |         2 |        1 |         5 | 2020-08-15 |
|       8 |         4 |        1 |        10 | 2020-09-17 |
|       8 |         4 |        1 |        10 | 2020-09-18 |
|       8 |         4 |        1 |        10 | 2020-09-18 |
|      10 |         3 |        1 |         4 | 2020-08-15 |
|      11 |         3 |        1 |         4 | 2020-08-15 |
|      12 |         3 |        1 |         4 | 2020-08-15 |
|      13 |         3 |        1 |         4 | 2020-08-15 |
|      14 |         3 |        1 |         4 | 2020-08-15 |
|      15 |         4 |        1 |        10 | 2020-08-15 |
|      16 |         4 |        1 |        10 | 2020-08-15 |
|      17 |         4 |        1 |        10 | 2020-08-15 |
|      18 |         4 |        1 |        10 | 2020-08-15 |
|      19 |         4 |        1 |        10 | 2020-08-15 |
|      20 |         4 |        1 |        10 | 2020-08-15 |
|      21 |         4 |        1 |        10 | 2020-08-15 |
|      22 |         4 |        1 |        10 | 2020-08-15 |
|      23 |         4 |        1 |        10 | 2020-08-15 |
|      24 |         4 |        1 |        10 | 2020-08-15 |
+---------+-----------+----------+-----------+------------+


* Create an Entity Relationship Diagram to show the relationships between the tables. 

See ERD.png file in repo.

* Write queries for the following

1. The most popular product sold on a specific date (2020, 08, 15). - WORKS

select Product.ProductName, Sales.ProductID, count(*) as Popularity, Sales.DateOfSale from Product, Sales where Sales.ProductID = Product.ProductID and DateOfSale = '2020-08-15' group by DateOfSale, Sales.ProductID having count(*) = (select max(r) from (select count(*) as r, ProductID from Sales where DateOfSale = '2020-08-15' group by DateOfSale, ProductID) as myTable);

2. The most popular product sold last week. - ?

(This week)
select Product.ProductName, Sales.ProductID, count(*) as Popularity, week(Sales.DateOfSale) from Product, Sales where Sales.ProductID = Product.ProductID and week(DateOfSale) = week(curdate()) - 1 and year(DateOfSale) = year(curdate()) group by week(DateOfSale), Sales.ProductID having count(*) = (select max(r) from (select count(*) as r, ProductID from Sales group by DateOfSale, ProductID) as myTable);

---

(last week) - not working
select Product.ProductName, Sales.ProductID, count(*) as Popularity, week(Sales.DateOfSale) from Product, Sales where Sales.ProductID = Product.ProductID and week(DateOfSale) = week(curdate())-1 and year(DateOfSale) = year(curdate()) group by week(DateOfSale), Sales.ProductID having count(*) = (select max(r) from (select count(*) as r, ProductID from Sales where week(DateOfSale) = week(curdate())-1 and year(DateOfSale) = year(curdate()) group by DateOfSale, ProductID) as myTable);

3. The most popular product sold on a specific month (08). - WORKS

select Product.ProductName, Sales.ProductID, count(*) as Popularity, month(Sales.DateOfSale) from Product, Sales where Sales.ProductID = Product.ProductID and month(DateOfSale) = '08' and year(DateOfSale) = year(curdate()) group by month(DateOfSale), Sales.ProductID having count(*) = (select max(r) from (select count(*) as r, ProductID from Sales where month(DateOfSale) = '08' group by month(DateOfSale), ProductID) as myTable);

4. The most popular subcategory for a specific date (2020, 08, 15). - WORKS

select SubCategoryName, count(*) as Popularity, DateOfSale from Product join Sales on Product.ProductID = Sales.ProductID join Subcategory on Subcategory.SubCategoryID = Product.SubCategoryID where DateOfSale = '2020-08-15' group by DateOfSale, SubCategoryName having count(*) = (select max(r) from (select count(*) as r, Subcategory.SubcategoryID from  Product join Sales on Product.ProductID = Sales.ProductID join Subcategory on Subcategory.SubCategoryID = Product.SubCategoryID where DateOfSale = '2020-08-15' group by DateOfSale, Subcategory.SubCategoryID) as myTable);

5. The most popular subcategory for last week. - ?

select SubCategoryName, count(*) as Popularity, week(DateOfSale) from Product join Sales on Product.ProductID = Sales.ProductID join Subcategory on Subcategory.SubCategoryID = Product.SubCategoryID where week(DateOfSale) = week(curdate()) - 1 and year(DateOfSale) = year(curdate()) group by week(DateOfSale), SubCategoryName having count(*) = (select max(r) from (select count(*) as r, Subcategory.SubcategoryID from  Product join Sales on Product.ProductID = Sales.ProductID join Subcategory on Subcategory.SubCategoryID = Product.SubCategoryID group by DateOfSale, Subcategory.SubCategoryID) as myTable);


